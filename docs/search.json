[
  {
    "objectID": "ptbr/blog/survival-analysis.html",
    "href": "ptbr/blog/survival-analysis.html",
    "title": "Sof Aguiar",
    "section": "",
    "text": "An√°lise de Sobreviv√™ncia B√°sica"
  },
  {
    "objectID": "ptbr/about.html",
    "href": "ptbr/about.html",
    "title": "√â um prazer te ver por aqui!",
    "section": "",
    "text": "√â um prazer te ver por aqui!\nSou Sofia Aguiar, graduanda em Estat√≠stica pela UFMG, com interesse em sa√∫de p√∫blica e epidemiologia. Minha pesquisa busca transformar dados em ferramentas que fortale√ßam o sistema de sa√∫de e auxiliem profissionais na tomada de decis√µes.\nTenho experi√™ncia com visualiza√ß√£o de dados, infer√™ncia estat√≠stica e programa√ß√£o em R. Atualmente, estou me aprofundando em m√©todos bayesianos, aprendizado de m√°quina e Python para expandir minhas an√°lises e modelagens preditivas.\n\nüì¨ Contato:\nMe envie um e-mail em sof.m.aguiar@gmail.com\n\n\nüìå Onde me encontrar:\n\nProjetos de programa√ß√£o: GitHub\nCurr√≠culo acad√™mico: Lattes\nPerfil acad√™mico: OrcID\n\n\n\nMeus projetos favoritos\n\nUnderstanding Survival Analysis\n\n\n\nTutoriais em R para pesquisadores\n\nAn√°lise Explorat√≥ria - Um breve passo a passo de como olhar para seu dataset\n\n\nAviso: Este site est√° em desenvolvimento. Mudan√ßas podem ocorrer!"
  },
  {
    "objectID": "en/blog/data-viz.html",
    "href": "en/blog/data-viz.html",
    "title": "How to visualize your database - creating beautiful graphs and tables",
    "section": "",
    "text": "Warning! The translation is still in progress, this is an automatic translation and it may not be correct\n\n\nHow to visualize your database - creating beautiful graphs and tables\nA well-done descriptive and exploratory analysis can often change the course of your research. This is the ideal time to think about your research objective, the scope of your work, and the main information you should pay attention to.\nIn this tutorial, we will use the database available through Kaggle here. It describes more than 9,000 medical records of patients associated with the risk of diabetes.\n\nFirst of all, prepare the environment\nIn programming, having the code organized is essential. Both so that you can return to the analyses you did and understand what was done, and so that you can collaborate with other researchers.\nWe will start by configuring our environment, loading the necessary packages and other settings.\n\n# Packages used\n# This structure loads and installs packages if they are not already installed\nif(!require(tidyverse)) install.packages(\"tidyverse\")\nif(!require(kableExtra)) install.packages(\"kableExtra\")\nif(!require(ggcorrplot)) install.packages(\"ggcorrplot\")\nif(!require(corrr)) install.packages(\"corrr\")\nif(!require(rstatix)) install.packages(\"rstatix\")\n\n# For possible variables with very small or very large values, this option\n# avoids scientific notation\noptions(scipen = 9999)\n\n\n\nLoad your database\nFor databases on platforms like Kagle, there are n ways to load the database besides the traditional download and upload of the file. In my case, I downloaded the database and uploaded it to the website‚Äôs GitHub since I‚Äôll be using the same dataset several times.\n\n# Browse through the folders and load the database in .csv\ndiabetes_dataset = read.csv(\"../../assets/datasets/diabetes_dataset.csv\")\n\nBefore performing any analysis, we need to check the database. Ask yourself a few questions:\n\nWere all the columns read correctly?\nWere the decimal places set correctly?\nWhat are the types of each column?\nAre the characters set correctly?\n\nTo answer this, two simple commands and a little knowledge of what each variable means are enough.\n\n# Shows each column, the type and the first observations\nglimpse(diabetes_dataset)\n\nRows: 9,538\nColumns: 17\n$ Age                &lt;int&gt; 69, 32, 89, 78, 38, 41, 20, 39, 70, 19, 47, 55, 19,‚Ä¶\n$ Pregnancies        &lt;int&gt; 5, 1, 13, 13, 8, 10, 16, 4, 3, 1, 8, 0, 15, 12, 6, ‚Ä¶\n$ BMI                &lt;dbl&gt; 28.39, 26.49, 25.34, 29.91, 24.56, 17.47, 15.76, 28‚Ä¶\n$ Glucose            &lt;dbl&gt; 130.1, 116.5, 101.0, 146.0, 103.2, 67.0, 61.6, 105.‚Ä¶\n$ BloodPressure      &lt;dbl&gt; 77, 72, 82, 104, 74, 71, 60, 94, 90, 62, 93, 87, 60‚Ä¶\n$ HbA1c              &lt;dbl&gt; 5.4, 4.5, 4.9, 5.7, 4.7, 4.2, 4.0, 4.5, 4.0, 4.0, 4‚Ä¶\n$ LDL                &lt;dbl&gt; 130.4, 87.4, 112.5, 50.7, 102.5, 105.3, 62.4, 91.0,‚Ä¶\n$ HDL                &lt;dbl&gt; 44.0, 54.2, 56.8, 39.1, 29.1, 58.8, 43.4, 50.1, 51.‚Ä¶\n$ Triglycerides      &lt;dbl&gt; 50.0, 129.9, 177.6, 117.0, 145.9, 140.7, 64.6, 195.‚Ä¶\n$ WaistCircumference &lt;dbl&gt; 90.5, 113.3, 84.7, 108.9, 84.1, 81.8, 66.5, 123.2, ‚Ä¶\n$ HipCircumference   &lt;dbl&gt; 107.9, 81.4, 107.2, 110.0, 92.8, 93.2, 102.7, 121.4‚Ä¶\n$ WHR                &lt;dbl&gt; 0.84, 1.39, 0.79, 0.99, 0.91, 0.88, 0.65, 1.01, 0.7‚Ä¶\n$ FamilyHistory      &lt;int&gt; 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, ‚Ä¶\n$ DietType           &lt;int&gt; 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 2, 1, 1, 1, ‚Ä¶\n$ Hypertension       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ‚Ä¶\n$ MedicationUse      &lt;int&gt; 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, ‚Ä¶\n$ Outcome            &lt;int&gt; 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, ‚Ä¶\n\n\n\n# Shows the first 6 rows of the database\nhead(diabetes_dataset)\n\n  Age Pregnancies   BMI Glucose BloodPressure HbA1c   LDL  HDL Triglycerides\n1  69           5 28.39   130.1            77   5.4 130.4 44.0          50.0\n2  32           1 26.49   116.5            72   4.5  87.4 54.2         129.9\n3  89          13 25.34   101.0            82   4.9 112.5 56.8         177.6\n4  78          13 29.91   146.0           104   5.7  50.7 39.1         117.0\n5  38           8 24.56   103.2            74   4.7 102.5 29.1         145.9\n6  41          10 17.47    67.0            71   4.2 105.3 58.8         140.7\n  WaistCircumference HipCircumference  WHR FamilyHistory DietType Hypertension\n1               90.5            107.9 0.84             0        0            0\n2              113.3             81.4 1.39             0        0            0\n3               84.7            107.2 0.79             0        0            0\n4              108.9            110.0 0.99             0        0            0\n5               84.1             92.8 0.91             0        1            0\n6               81.8             93.2 0.88             1        0            0\n  MedicationUse Outcome\n1             1       0\n2             0       0\n3             1       0\n4             1       1\n5             0       0\n6             0       1\n\n\nAll right! We can continue.\n\n\nReading the dictionary\nThe last step before a good descriptive and exploratory analysis is reading the dictionary of variables. This is essential to understand acronyms that may be in another language, check the unit of measurement of each variable and identify the type of each column.\n\nAge: Age of the individual (18-90 years).\nPregnancies: Number of times the patient has been pregnant.\nBMI (Body Mass Index - BMI): Measurement of body fat based on height and weight (kg/m¬≤).\nGlucose: Blood glucose concentration (mg/dL), a key indicator of diabetes.\nBlood Pressure: Systolic blood pressure (mmHg), high levels may indicate hypertension.\nHbA1c: Glycated hemoglobin level (%), representing the average blood sugar level over several months.\nLDL (Low-Density Lipoprotein): Level of ‚Äúbad‚Äù cholesterol (mg/dL).\nHDL (High-Density Lipoprotein): Level of ‚Äúgood‚Äù cholesterol (mg/dL).\nTriglycerides: Levels of fat in the blood (mg/dL), high values ‚Äã‚Äãincrease the risk of diabetes.\nWaist Circumference: Waist measurement (cm), indicator of central obesity. - Hip Circumference (HipCircumference): Hip measurement (cm), used to calculate the waist-to-hip ratio.\nWaist-to-Hip Ratio (WHR): Waist circumference divided by hip circumference.\nFamily History (FamilyHistory): Indicates whether the individual has a family history of diabetes (1 = Yes, 0 = No).\nDiet Type (DietType): Eating habits (0 = Unbalanced, 1 = Balanced, 2 = Vegan/Vegetarian).\nHypertension (Hypertension): Presence of high blood pressure (1 = Yes, 0 = No).\nMedication Use (MedicationUse): Indicates whether the individual uses medication (1 = Yes, 0 = No).\nOutcome: Diagnosis of diabetes (1 = Diabetes, 0 = No Diabetes).\n\n\n\nUnivariate Analysis\nWe finally get to the stage of creating graphs and tables. An important piece of knowledge is knowing how to distinguish continuous variables (numbers and measurements) from categorical variables (classifications of some kind, such as race and sex).\nFor continuous variables, summary measures in a single table are an excellent way to add information to a report. For you, the researcher, to understand your database, creating histograms is a great way to visualize what is happening with each column, and to notice outliers and asymmetries.\n\n\nUnivariate Analysis\nWe finally get to the stage of creating graphs and tables. An important piece of knowledge is knowing how to distinguish continuous variables (numbers and measurements) from categorical variables (classifications of some kind, such as race and sex).\nFor continuous variables, summary measurements in a single table are an excellent way to add information to a report. For you, the researcher, to understand your database, creating histograms is a great way to visualize what is happening with each column, and to notice outliers and asymmetry, even if you don‚Äôt include them in the report.\nSo, to run the histogram, I recommend using the ggplot2 package, which provides a beautiful graph with relatively little effort.\n\ndiabetes_dataset %&gt;% # Opens the database\nselect(WaistCircumference) %&gt;% # Selects the variable of interest\nggplot(aes(x = WaistCircumference)) + # Calls the function to create graphs by placing our var on the x axis\ngeom_histogram(fill = \"#F2C354\", color = \"white\") + # Creates the histogram with the desired colors\nlabs(title = \"Histogram for Waist Circumference in cm\", # Adds title\nx = \"Waist Circumference (cm)\", # And replaces the default text on the axes\ny = \"Frequency\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nAnd now for our table we will need a little more code.\n\n# We define the labels in Portuguese for each categorical variable\nrotulos_categoricas &lt;- c( FamilyHistory = \"Family History\", # Indicates whether the individual has a family history of diabetes (1 = Yes, 0 = No)\nDietType = \"Diet Type\", # Eating habits (0 = Unbalanced, 1 = Balanced, 2 = Vegan/Vegetarian)\nHypertension = \"Hypertension\", # Presence of high blood pressure (1 = Yes, 0 = No)\nMedicationUse = \"Use of Medications\", # Indicates whether the individual uses medication (1 = Yes, 0 = No)\nOutcome = \"Result\" # Diagnosis of diabetes (1 = Diabetes, 0 = No Diabetes)\n)\n# We select only the categorical variables based on the defined labels\nvariaveis_categoricas &lt;- names(rotulos_categoricas)\n\n# Calculate the frequency and proportion for each category of categorical variables\nresumo_categoricas &lt;- diabetes_dataset %&gt;% # Access the dataset\nselect(all_of(variaveis_categoricas)) %&gt;% # Select the categorical columns\npivot_longer(cols = everything(), names_to = \"Vari√°vel\", values_to = \"Categoria\") %&gt;% # Convert the wide format to long\ngroup_by(Vari√°vel,Categoria) %&gt;% # Groups by unique values ‚Äã‚Äãof categorical variables\nsummarise(Frequency = n(), .groups = \"drop\") %&gt;% # Counts how many times each category appears\nmutate(Proportion = Frequency / sum(Frequency) * 100) %&gt;% # Calculates the relative percentage of each category\nmutate(Vari√°vel = recode(Vari√°vel, !!!rotulos_categoricas)) # Replaces the variable names with the labels in Portuguese\n\n# Let's create the table formatted\nresumo_categoricas %&gt;% # Calls the created summary\nkable(\"html\",\ncaption = \"Distribution of categorical variables\", # Uses kable from the kableExtra library\nalign = \"c\", # Aligns the text to the center\ncol.names = c(\"Variable\", \"Category\", \"Frequency\", \"Proportion (%)\")) %&gt;% # Defines the column names\nkable_styling(full_width = FALSE,\nbootstrap_options = c(\"striped\", \"hover\")) %&gt;% # Applies style settings\nfootnote(general = \"Source: Prepared by the author.\", # Adds the table font\ngeneral_title = \"\") %&gt;%\nadd_header_above(c(\" \" = 1, \"Descriptive Statistics\" = 3)) # Adds a header for the statistics columns\n\n\nDistribution of categorical variables\n\n\n\n\n\n\n\n\n\n\nDescriptive Statistics\n\n\n\nVariable\nCategory\nFrequency\nProportion (%)\n\n\n\n\nDiet Type\n0\n5794\n12.1492975\n\n\nDiet Type\n1\n2851\n5.9781925\n\n\nDiet Type\n2\n893\n1.8725100\n\n\nFamily History\n0\n6653\n13.9505137\n\n\nFamily History\n1\n2885\n6.0494863\n\n\nHypertension\n0\n9528\n19.9790312\n\n\nHypertension\n1\n10\n0.0209688\n\n\nUse of Medications\n0\n5675\n11.8997693\n\n\nUse of Medications\n1\n3863\n8.1002307\n\n\nResult\n0\n6256\n13.1180541\n\n\nResult\n1\n3282\n6.8819459\n\n\n\n Source: Prepared by the author.\n\n\n\n\n\n\n\n\n\n\n\nFor other formatting, just search a little in the package documentation kableExtra and understand what needs to be changed.\nFor categorical variables, the process is very similar. We will create a bar chart (never a pie chart!!) and a table with the summary measures.\n\ndiabetes_dataset %&gt;% # Opens the database\nselect(FamilyHistory) %&gt;% # Selects the variable of interest\nggplot(aes(x = as.factor(FamilyHistory))) + # Calls the function to create graphs by placing our var on the x axis as a factor (i.e. categorical var)\ngeom_bar(fill = \"#C97064\", color = \"white\") + # Creates the bar graph with the desired colors\nlabs(title = \"Distribution for Family History of Diabetes\", # Adds title\nx = \"Do you have a family history? (0 = no, 1 = yes)\", # And replaces the default text on the axes\ny = \"Frequency\")\n\n\n\n\n\n\n\n\nIt may also be interesting to create a graph for the group proportions on the y axis, in order to facilitate visualization. Just change a few lines of code as seen below.\n\ndiabetes_dataset %&gt;% # Open the database\ncount(FamilyHistory) %&gt;% # Count the occurrences of each category\nmutate(Proportion = n / sum(n)) %&gt;% # Calculate the proportion\nggplot(aes(x = as.factor(FamilyHistory), y = Proportion)) + # Set the axes\ngeom_col(fill = \"#68A357\", color = \"white\") + # Create the bar chart\nlabs(title = \"Distribution of Family History of Diabetes\", # Add title\nx = \"Do you have a family history? (0 = no, 1 = yes)\", # And replace the default text on the axes\ny = \"Proportion\")\n\n\n\n\n\n\n\n\nFinally, now let‚Äôs make the tables for the categorical variables.\n\n# We define the labels in Portuguese for each categorical variable\nrotulos_categoricas &lt;- c(\nFamilyHistory = \"Family History\", # Indicates whether the individual has a family history of diabetes (1 = Yes, 0 = No)\nDietType = \"Diet Type\", # Eating habits (0 = Unbalanced, 1 = Balanced, 2 = Vegan/Vegetarian)\nHypertension = \"Hypertension\", # Presence of high blood pressure (1 = Yes, 0 = No)\nMedicationUse = \"Use of Medications\", # Indicates whether the individual uses medication (1 = Yes, 0 = No)\nOutcome = \"Resultado\" # Diagnosis of diabetes (1 = Diabetes, 0 = No Diabetes)\n)\n# We select only the categorical variables based on the defined labels\nvariaveis_categoricas &lt;- names(rotulos_categoricas)\n\n# Calculate the frequency and proportion for each category of categorical variables\nresumo_categoricas &lt;- diabetes_dataset %&gt;% # Access the dataset\nselect(all_of(variaveis_categoricas)) %&gt;% # Select the categorical columns\npivot_longer(cols = everything(), names_to = \"Vari√°vel\", values_to = \"Categoria\") %&gt;% # Convert the wide format to long\ngroup_by(Vari√°vel,Categoria) %&gt;% # Groups by unique values of categorical variables\nsummarise(Frequency = n(), .groups = \"drop\") %&gt;% # Counts how many times each category appears\nmutate(Propor√ß√£o = Frequency / sum(Frequency) * 100) %&gt;% # Calculates the relative percentage of each category\nmutate(Vari√°vel = recode(Vari√°vel, !!!rotulos_categoricas)) # Replaces the variable names with the labels in Portuguese\n\n# We adjusted to remove the repetition of the name of the variable\nresumo_categoricas &lt;- resumo_categoricas %&gt;%\ngroup_by(Vari√°vel) %&gt;%\nmutate(Vari√°vel = ifelse(row_number() == 1, Vari√°vel, \"\")) %&gt;% # Keeps the name only in the first line of each group\nungroup()\n\n# We create the formatted table\nresumo_categoricas %&gt;% # Calls the created summary\nkable(\"html\",\ncaption = \"Distribution of categorical variables\", # Uses kable from the kableExtra library\nalign = \"c\", # Aligns the text to the center\ncol.names = c(\"Variable\", \"Category\", \"Frequency\", \"Proportion (%)\")) %&gt;% # Defines the column names\nkable_styling(full_width = FALSE,\nbootstrap_options = c(\"striped\", \"hover\")) %&gt;% # Applies style settings\nfootnote(general = \"Source: Prepared by the author.\", # Add the table source\ngeneral_title = \"\") %&gt;%\nadd_header_above(c(\" \" = 1, \"Descriptive Statistics\" = 3)) # Add a header for the statistics columns\n\n\nDistribution of categorical variables\n\n\n\n\n\n\n\n\n\n\nDescriptive Statistics\n\n\n\nVariable\nCategory\nFrequency\nProportion (%)\n\n\n\n\nDiet Type\n0\n5794\n12.1492975\n\n\n\n1\n2851\n5.9781925\n\n\n\n2\n893\n1.8725100\n\n\nFamily History\n0\n6653\n13.9505137\n\n\n\n1\n2885\n6.0494863\n\n\nHypertension\n0\n9528\n19.9790312\n\n\n\n1\n10\n0.0209688\n\n\nUse of Medications\n0\n5675\n11.8997693\n\n\n\n1\n3863\n8.1002307\n\n\nResultado\n0\n6256\n13.1180541\n\n\n\n1\n3282\n6.8819459\n\n\n\n Source: Prepared by the author.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBivariate analysis\nUnivariate analysis aims to understand the distribution of the variable itself. In bivariate (and multivariate) analysis, we want to understand the relationship between the variables. Note that I am not looking for causality or the predictive value of each variable; this will be a later step depending on your research objective.\nWe can start with a correlogram, which shows a map of the correlations of all continuous variables. It is very useful for identifying whether there is any collinearity between variables, which should be confirmed later through appropriate tests.\n\n# Select only continuous variables\ncontinuous_variables &lt;- c(\"Age\", \"BMI\", \"Glucose\", \"BloodPressure\", \"HbA1c\",\n\"LDL\", \"HDL\", \"Triglycerides\", \"WaistCircumference\",\n\"HipCircumference\", \"WHR\")\n\n# Create the correlation matrix\ncorrelation_matrix &lt;- diabetes_dataset %&gt;%\nselect(all_of(continuous_variables)) %&gt;% # Select only continuous variables\ncor(use = \"pairwise.complete.obs\") # Calculate the correlation excluding NA values\n\n# Create the correlogram\nggcorrplot(correlation_matrix,\nmethod = \"circle\", # Set the graph style (circles)\ntype = \"lower\", # Show only the lower half of the matrix\nlab = TRUE, # Show the correlation values\nlab_size = 3, # Size from the font of the labels\ncolors = c(\"#6D9EC1\", \"white\", \"#E46726\"), # Sets the color palette\ntitle = \"Correlogram of Continuous Variables\", # Adds a title\nggtheme = theme_minimal()) # Applies a minimalist theme\n\n\n\n\n\n\n\n\nAnother very important form of correlation, especially for prediction studies, is the correlation of each variable with the outcome.\n\n# We define continuous and categorical variables\ncontinuous_variables &lt;- c(\"Age\", \"BMI\", \"Glucose\", \"BloodPressure\", \"HbA1c\",\n\"LDL\", \"HDL\", \"Triglycerides\", \"WaistCircumference\",\n\"HipCircumference\", \"WHR\")\n\ncategorical_variables &lt;- c(\"FamilyHistory\", \"DietType\", \"Hypertension\",\n\"MedicationUse\")\n\n# --- Correlation for continuous variables with Outcome ---\ncontinuous_correlations &lt;- diabetes_dataset %&gt;%\nselect(all_of(continuous_variables), Outcome) %&gt;%\ncor(use = \"pairwise.complete.obs\") %&gt;%\nas.data.frame() %&gt;%\nselect(Outcome) %&gt;%\nrownames_to_column(var = \"Variable\") %&gt;%\nrename(`Correlation` = Outcome) %&gt;% # Rename for consistency\nmutate(Type = \"Continuous\")\n\n# --- Correlation for categorical variables with Outcome ---\ncalcular_cramer &lt;- function(var) {\ntab &lt;- table(diabetes_dataset[[var]], diabetes_dataset$Outcome)\ncramer &lt;- rstatix::cramer_v(tab) %&gt;% as.numeric() # Convert to number\nreturn(data.frame(Variable = var, `Correlation` = cramer, Type = \"Categorical\"))\n}\ncategorical_correlations &lt;- bind_rows(lapply(categorical_variables, calcular_cramer))\n\nWarning in stats::chisq.test(x, y, correct = correct, ...): Aproxima√ß√£o do\nqui-quadrado pode estar incorreta\n\n# --- We join all correlations ---\ntotal_correlations &lt;- bind_rows(continuous_correlations, categorical_correlations) %&gt;%\narrange(desc(abs(Correlation))) # Sort by the strength of the correlation\n\n# We define the labels in Portuguese for all variables\nlabels &lt;- c(\nAge = \"Age (years)\",\nBMI = \"Body Mass Index (kg/m¬≤)\",\nGlucose = \"Glucose (mg/dL)\",\nBloodPressure = \"Blood Pressure (mmHg)\",\nHbA1c = \"Glycated Hemoglobin (%)\",\nLDL = \"LDL Cholesterol (mg/dL)\",\nHDL = \"HDL Cholesterol (mg/dL)\",\nTriglycerides = \"Triglycerides (mg/dL)\",\nWaistCircumference = \"Waist Circumference (cm)\",\nHipCircumference = \"Hip Circumference (cm)\",\nWHR = \"Waist-to-Hip Ratio\", FamilyHistory = \"Family History\",\nDietType = \"Diet Type\",\nHypertension = \"Hypertension\",\nMedicationUse = \"Medication Use\"\n)\n\n# Remove the correlation of Outcome with itself\ntotal_correlations &lt;- total_correlations %&gt;%\nfilter(Variable != \"Outcome\") %&gt;%\nmutate(Variable = recode(Variable, !!!labels)) # Apply labels\n\n# Display the formatted table\ntotal_correlations %&gt;%\nmutate(Correlation = round(Correlation, 3)) %&gt;% # Round values\nkable(\"html\",\ncaption = \"Correlation of All Variables with Outcome\",\nalign = \"c\",\ncol.names = c(\"Variable\", \"Correlation\", \"Type\")) %&gt;% # Define column names\nkable_styling(full_width = FALSE,\nbootstrap_options = c(\"striped\", \"hover\")) %&gt;% # Styling\nfootnote(general = \"Source: Prepared by the author.\",\ngeneral_title = \"\") %&gt;%\nadd_header_above(c(\" \" = 1, \"Correlation with Outcome\" = 2)) # Top header\n\n\nCorrelation of All Variables with Outcome\n\n\n\n\n\n\n\n\n\nCorrelation with Outcome\n\n\n\nVariable\nCorrelation\nType\n\n\n\n\nFamily History\n0.909\nCategorical\n\n\nGlucose (mg/dL)\n0.168\nContinuous\n\n\nGlycated Hemoglobin (%)\n0.152\nContinuous\n\n\nBody Mass Index (kg/m¬≤)\n0.107\nContinuous\n\n\nBlood Pressure (mmHg)\n0.096\nContinuous\n\n\nWaist Circumference (cm)\n0.087\nContinuous\n\n\nHip Circumference (cm)\n0.083\nContinuous\n\n\nAge (years)\n0.068\nContinuous\n\n\nMedication Use\n0.064\nCategorical\n\n\nHypertension\n0.028\nCategorical\n\n\nWaist-to-Hip Ratio\n0.022\nContinuous\n\n\nLDL Cholesterol (mg/dL)\n0.019\nContinuous\n\n\nDiet Type\n0.016\nCategorical\n\n\nHDL Cholesterol (mg/dL)\n-0.009\nContinuous\n\n\nTriglycerides (mg/dL)\n-0.008\nContinuous\n\n\n\n Source: Prepared by the author.\n\n\n\n\n\n\n\n\n\n\nFrom the given correlations we can create bivariate graphs with the variable of interest and a covariate.\nFor continuous covariates, we will use the boxplot as visualization and for categorical variables, stacked bar graphs.\n\ndiabetes_dataset %&gt;% # Open the database\nggplot(aes(x = as.factor(FamilyHistory), fill = as.factor(Outcome))) + # Call the graphing function, filling in the outcome\ngeom_bar(position = \"fill\", color = \"white\") + # Proportion within each group\nscale_fill_manual(values= c(\"#C97064\", \"#68A357\"), labels = c(\"No Diabetes\", \"Diabetes\")) + # Choose colors\nlabs(title = \"Family History Distribution by Outcome\", # Add title\nx = \"Family History (0 = No, 1 = Yes)\", # Add labels\ny = \"Proportion\",\nfill = \"Outcome\")\n\n\n\n\n\n\n\n\n\ndiabetes_dataset %&gt;% # Open the database\nggplot(aes(x = as.factor(Outcome), y = Glucose, fill = as.factor(Outcome))) + # Call the function for filling graphs with the outcome\ngeom_boxplot(outlier.color = \"red\", outlier.shape = 16) + # Create the boxplot\nscale_fill_manual(values= c(\"#C97064\", \"#68A357\"), labels = c(\"No Diabetes\", \"Diabetes\")) + # Choose the colors\nlabs(title = \"Glucose Distribution by Outcome\", # Add title\nx = \"Outcome\", # Add captions\ny = \"Glucose (mg/dL)\",\nfill = \"Outcome\")\n\n\n\n\n\n\n\n\n\n\nFinal considerations\nThe step-by-step suggested here is both for creating initial reports and for the researcher himself to better understand the database worked on. It is essential to do each step carefully and understand the need for pre-processing variables, such as adjusting the character to factor, and adapting the scripts as needed.\nI hope this helps!"
  },
  {
    "objectID": "en/about.html",
    "href": "en/about.html",
    "title": "Great to See You Here!",
    "section": "",
    "text": "Great to See You Here!\nI‚Äôm Sofia Aguiar, a Statistics undergraduate at UFMG with a strong interest in public health and epidemiology. My research focuses on transforming data into tools that strengthen the healthcare system and support professionals in decision-making.\nI have experience with data visualization, statistical inference, and programming in R. Currently, I‚Äôm deepening my knowledge in Bayesian methods, machine learning, and Python to enhance my analyses and predictive modeling.\n\nüì¨ Contact\nFeel free to email me at sof.m.aguiar@gmail.com\n\n\nüìå Where to Find Me\n\nProgramming Projects: GitHub\n\nAcademic CV: Lattes\n\nAcademic Profile: OrcID\n\n\n\nMy Favorite Projects\n\nUnderstanding Survival Analysis\n\n\n\nR Tutorials for Researchers\n\nData Viz - A brief step by step on how to look at your dataset\n\n\nNotice: This site is under development. Changes may occur!"
  },
  {
    "objectID": "ptbr/blog/data-viz.html",
    "href": "ptbr/blog/data-viz.html",
    "title": "Como vizualizar seu banco de dados - fazendo belos gr√°ficos e tabelas",
    "section": "",
    "text": "Como vizualizar seu banco de dados - fazendo belos gr√°ficos e tabelas\nMuitas vezes uma an√°lise descritiva e explota√≥ria bem feita pode mudar os rumos da sua pesquisa. Esse √© o momento ideal de pensar no seu objetivo de pesquisa, qual o escopo do seu trabalho e quais s√£o as principais informa√ß√µes pelas quais se deve atentar.\nNesse tutorial usaremos o banco de dados dispon√≠vel atrav√©s do Kaggle aqui. Ele descreve mais de 9 mil registros m√©dicos de pacientes associados ao risco de diabetes.\n\nAntes de tudo, prepare o ambiente\nEm programa√ß√£o, ter o c√≥digo organizado √© fundamental. Tanto para que voc√™ mesmo possa retornar √†s an√°lises que fez e entender o que foi feito tanto para colabora√ß√£o com outros pesquisadores.\nCome√ßaremos com as configura√ß√µes do nosso ambiente, carregando os pacotes necess√°rios e outras configura√ß√µes.\n\n# Pacotes utilizados\n# Essa estrutura carrega e instala os pacotes caso eles n√£o estejam instalados ainda\nif(!require(tidyverse)) install.packages(\"tidyverse\")\nif(!require(kableExtra)) install.packages(\"kableExtra\")\nif(!require(ggcorrplot)) install.packages(\"ggcorrplot\")\nif(!require(corrr)) install.packages(\"corrr\")\nif(!require(rstatix)) install.packages(\"rstatix\")\n\n# Para poss√≠veis vari√°veis com valores muito pequenos ou muito grandes, essa op√ß√£o\n# evita a nota√ß√†o cient√≠fica\noptions(scipen = 9999)\n\n\n\nCarregue seu banco\nPara bancos de dados em plataformas como o Kagle, h√° n formas de carregar o banco al√©m do tradicional baixar e carregar o arquivo. No meu caso eu fiz download do banco e subi ele para o gitHub do site j√° que vou utilizar esse mesmo dataset v√°rias vezes.\n\n# Navega pelas pastas e carrega o banco de dados em .csv\ndiabetes_dataset = read.csv(\"../../assets/datasets/diabetes_dataset.csv\")\n\nAntes de fazer qualquer an√°lise temos que verificar o banco. Fa√ßa algumas perguntas:\n\nTodas as colunas foram lidas de forma correta?\nAs casas decimais foram configuradas corretamente?\nQuais s√£o os tipos de cada coluna?\nOs caracteres est√£o bem configurados?\n\nPara responder isso dois comando simples e um pouco de conhecimento do que cada vari√°vel significa basta.\n\n# Mostra cada coluna, o tipo e as primeiras observa√ß√µes\nglimpse(diabetes_dataset)\n\nRows: 9,538\nColumns: 17\n$ Age                &lt;int&gt; 69, 32, 89, 78, 38, 41, 20, 39, 70, 19, 47, 55, 19,‚Ä¶\n$ Pregnancies        &lt;int&gt; 5, 1, 13, 13, 8, 10, 16, 4, 3, 1, 8, 0, 15, 12, 6, ‚Ä¶\n$ BMI                &lt;dbl&gt; 28.39, 26.49, 25.34, 29.91, 24.56, 17.47, 15.76, 28‚Ä¶\n$ Glucose            &lt;dbl&gt; 130.1, 116.5, 101.0, 146.0, 103.2, 67.0, 61.6, 105.‚Ä¶\n$ BloodPressure      &lt;dbl&gt; 77, 72, 82, 104, 74, 71, 60, 94, 90, 62, 93, 87, 60‚Ä¶\n$ HbA1c              &lt;dbl&gt; 5.4, 4.5, 4.9, 5.7, 4.7, 4.2, 4.0, 4.5, 4.0, 4.0, 4‚Ä¶\n$ LDL                &lt;dbl&gt; 130.4, 87.4, 112.5, 50.7, 102.5, 105.3, 62.4, 91.0,‚Ä¶\n$ HDL                &lt;dbl&gt; 44.0, 54.2, 56.8, 39.1, 29.1, 58.8, 43.4, 50.1, 51.‚Ä¶\n$ Triglycerides      &lt;dbl&gt; 50.0, 129.9, 177.6, 117.0, 145.9, 140.7, 64.6, 195.‚Ä¶\n$ WaistCircumference &lt;dbl&gt; 90.5, 113.3, 84.7, 108.9, 84.1, 81.8, 66.5, 123.2, ‚Ä¶\n$ HipCircumference   &lt;dbl&gt; 107.9, 81.4, 107.2, 110.0, 92.8, 93.2, 102.7, 121.4‚Ä¶\n$ WHR                &lt;dbl&gt; 0.84, 1.39, 0.79, 0.99, 0.91, 0.88, 0.65, 1.01, 0.7‚Ä¶\n$ FamilyHistory      &lt;int&gt; 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, ‚Ä¶\n$ DietType           &lt;int&gt; 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 2, 1, 1, 1, ‚Ä¶\n$ Hypertension       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ‚Ä¶\n$ MedicationUse      &lt;int&gt; 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, ‚Ä¶\n$ Outcome            &lt;int&gt; 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, ‚Ä¶\n\n\n\n# Mostra as 6 primeiras linhas do banco de dados\nhead(diabetes_dataset)\n\n  Age Pregnancies   BMI Glucose BloodPressure HbA1c   LDL  HDL Triglycerides\n1  69           5 28.39   130.1            77   5.4 130.4 44.0          50.0\n2  32           1 26.49   116.5            72   4.5  87.4 54.2         129.9\n3  89          13 25.34   101.0            82   4.9 112.5 56.8         177.6\n4  78          13 29.91   146.0           104   5.7  50.7 39.1         117.0\n5  38           8 24.56   103.2            74   4.7 102.5 29.1         145.9\n6  41          10 17.47    67.0            71   4.2 105.3 58.8         140.7\n  WaistCircumference HipCircumference  WHR FamilyHistory DietType Hypertension\n1               90.5            107.9 0.84             0        0            0\n2              113.3             81.4 1.39             0        0            0\n3               84.7            107.2 0.79             0        0            0\n4              108.9            110.0 0.99             0        0            0\n5               84.1             92.8 0.91             0        1            0\n6               81.8             93.2 0.88             1        0            0\n  MedicationUse Outcome\n1             1       0\n2             0       0\n3             1       0\n4             1       1\n5             0       0\n6             0       1\n\n\nTudo certo! Podemos continuar.\n\n\nLeitura do dicion√°rio\nO √∫ltimo passo antes de uma boa an√°lise descritiva e explorat√≥ria √© ler o dicion√°rio de vari√°veis. Isso √© fundamental para entender siglas que podem estar em outra l√≠ngua, verificar a unidade de medida de cada vari√°vel e j√° identificar sobre qual o tipo de cada coluna.\n\nIdade (Age): Idade do indiv√≠duo (18-90 anos).\nGravidezes (Pregnancies): N√∫mero de vezes que a paciente esteve gr√°vida. -IMC (√çndice de Massa Corporal - BMI): Medida de gordura corporal baseada na altura e peso (kg/m¬≤).\nGlicose (Glucose): Concentra√ß√£o de glicose no sangue (mg/dL), um indicador-chave de diabetes.\nPress√£o Arterial (BloodPressure): Press√£o arterial sist√≥lica (mmHg), n√≠veis elevados podem indicar hipertens√£o.\nHbA1c: N√≠vel de hemoglobina glicada (%), representa a m√©dia de a√ß√∫car no sangue ao longo de meses.\nLDL (Lipoprote√≠na de Baixa Densidade - Low-Density Lipoprotein): N√≠vel de colesterol ‚Äúruim‚Äù (mg/dL).\nHDL (Lipoprote√≠na de Alta Densidade - High-Density Lipoprotein): N√≠vel de colesterol ‚Äúbom‚Äù (mg/dL).\nTriglicer√≠deos (Triglycerides): N√≠veis de gordura no sangue (mg/dL), valores altos aumentam o risco de diabetes.\nCircunfer√™ncia da Cintura (WaistCircumference): Medida da cintura (cm), indicador de obesidade central.\nCircunfer√™ncia do Quadril (HipCircumference): Medida do quadril (cm), usada para calcular a rela√ß√£o cintura-quadril.\nRela√ß√£o Cintura-Quadril (WHR - Waist-to-Hip Ratio): Circunfer√™ncia da cintura dividida pela circunfer√™ncia do quadril.\nHist√≥rico Familiar (FamilyHistory): Indica se o indiv√≠duo tem hist√≥rico familiar de diabetes (1 = Sim, 0 = N√£o).\nTipo de Dieta (DietType): H√°bitos alimentares (0 = Desequilibrado, 1 = Equilibrado, 2 = Vegano/Vegetariano).\nHipertens√£o (Hypertension): Presen√ßa de press√£o alta (1 = Sim, 0 = N√£o).\nUso de Medicamentos (MedicationUse): Indica se o indiv√≠duo faz uso de medica√ß√£o (1 = Sim, 0 = N√£o).\nResultado (Outcome): Diagn√≥stico de diabetes (1 = Diabetes, 0 = Sem Diabetes).\n\n\n\nAn√°lise univariada\nFinalmente chegamos na etapa de criar gr√°ficos e tabelas. Um importante conhecimento √© saber distinguir vari√°veis cont√≠nuas (n√∫meros e medidas) de vari√°veis categ√≥ricas (classifica√ß√£o de algum tipo, como ra√ßa e sexo).\nPara vari√°veis conit√≠nuas, as medidas resumo em uma √∫nica tabela s√£o uma excelente forma de adicionar informa√ß√£o em um relat√≥rio. Para fins de voc√™, pesquisador, entender seu banco de dados, criar histogramas √© uma √≥tima forma de visualizar o que est√° acontecendo com cada coluna, perceber outliers e assimetria, mesmo que n√£o os inclua no relat√≥rio.\nAssim, para executar o histograma recomendo utilizar o pacote ggplot2, que traz um belo gr√°fico com relativamente pouco esfor√ßo.\n\ndiabetes_dataset %&gt;%  # Abre o banco de dados\n  select(WaistCircumference) %&gt;% # Seleciona a vari√°vel de interesse\n  ggplot(aes(x = WaistCircumference)) + # Chama a fun√ß√£o de criar gr√°ficos colocando nossa var no eixo x\n  geom_histogram(fill = \"#F2C354\", color = \"white\") + # Cria o histograma com as cores desejadas\n  labs(title = \"Histograma para Circunfer√™ncia de Cintura em cm\", # Adiciona t√≠tulo \n       x = \"Circunfer√™ncia de Cintuta (cm)\", # E substitui o texto padr√£o dos eixos\n       y = \"Frequ√™ncia\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nE agora para a nossa tabela precisaremos de um pouco mais de c√≥digo.\n\n# Definimos os r√≥tulos em portugu√™s para cada vari√°vel categ√≥rica\nrotulos_categoricas &lt;- c(\n  FamilyHistory = \"Hist√≥rico Familiar\",  # Indica se o indiv√≠duo tem hist√≥rico familiar de diabetes (1 = Sim, 0 = N√£o)\n  DietType = \"Tipo de Dieta\",  # H√°bitos alimentares (0 = Desequilibrado, 1 = Equilibrado, 2 = Vegano/Vegetariano)\n  Hypertension = \"Hipertens√£o\",  # Presen√ßa de press√£o alta (1 = Sim, 0 = N√£o)\n  MedicationUse = \"Uso de Medicamentos\",  # Indica se o indiv√≠duo faz uso de medica√ß√£o (1 = Sim, 0 = N√£o)\n  Outcome = \"Resultado\"  # Diagn√≥stico de diabetes (1 = Diabetes, 0 = Sem Diabetes)\n)\n\n# Selecionamos apenas as vari√°veis categ√≥ricas com base nos r√≥tulos definidos\nvariaveis_categoricas &lt;- names(rotulos_categoricas)\n\n# Calcular a frequ√™ncia e a propor√ß√£o para cada categoria das vari√°veis categ√≥ricas\nresumo_categoricas &lt;- diabetes_dataset %&gt;%  # Acessa o dataset\n  select(all_of(variaveis_categoricas)) %&gt;%  # Seleciona as colunas categ√≥ricas\n  pivot_longer(cols = everything(), names_to = \"Vari√°vel\", values_to = \"Categoria\") %&gt;%  # Converte o formato wide para long\n  group_by(Vari√°vel, Categoria) %&gt;%  # Agrupa pelos valores √∫nicos das vari√°veis categ√≥ricas\n  summarise(Frequ√™ncia = n(), .groups = \"drop\") %&gt;%  # Conta quantas vezes cada categoria aparece\n  mutate(Propor√ß√£o = Frequ√™ncia / sum(Frequ√™ncia) * 100) %&gt;%  # Calcula a porcentagem relativa de cada categoria\n  mutate(Vari√°vel = recode(Vari√°vel, !!!rotulos_categoricas))  # Substitui os nomes das vari√°veis pelos r√≥tulos em portugu√™s\n\n# Criamos a tabela formatada\nresumo_categoricas %&gt;%  # Chama o resumo criado\n  kable(\"html\", \n        caption = \"Distribui√ß√£o das vari√°veis categ√≥ricas\",  # Utiliza o kable da biblioteca kableExtra\n        align = \"c\",  # Alinha o texto ao centro\n        col.names = c(\"Vari√°vel\", \"Categoria\", \"Frequ√™ncia\", \"Propor√ß√£o (%)\")) %&gt;%  # Define os nomes das colunas\n  kable_styling(full_width = FALSE, \n                bootstrap_options = c(\"striped\", \"hover\")) %&gt;%  # Aplica configura√ß√µes de estilo\n  footnote(general = \"Fonte: Elaborado pelo autor.\",  # Adiciona a fonte da tabela\n           general_title = \"\") %&gt;%\n  add_header_above(c(\" \" = 1, \"Estat√≠sticas Descritivas\" = 3))  # Adiciona um cabe√ßalho para as colunas de estat√≠sticas\n\n\nDistribui√ß√£o das vari√°veis categ√≥ricas\n\n\n\n\n\n\n\n\n\n\nEstat√≠sticas Descritivas\n\n\n\nVari√°vel\nCategoria\nFrequ√™ncia\nPropor√ß√£o (%)\n\n\n\n\nTipo de Dieta\n0\n5794\n12.1492975\n\n\nTipo de Dieta\n1\n2851\n5.9781925\n\n\nTipo de Dieta\n2\n893\n1.8725100\n\n\nHist√≥rico Familiar\n0\n6653\n13.9505137\n\n\nHist√≥rico Familiar\n1\n2885\n6.0494863\n\n\nHipertens√£o\n0\n9528\n19.9790312\n\n\nHipertens√£o\n1\n10\n0.0209688\n\n\nUso de Medicamentos\n0\n5675\n11.8997693\n\n\nUso de Medicamentos\n1\n3863\n8.1002307\n\n\nResultado\n0\n6256\n13.1180541\n\n\nResultado\n1\n3282\n6.8819459\n\n\n\n Fonte: Elaborado pelo autor.\n\n\n\n\n\n\n\n\n\n\n\nPara outras formata√ß√µes basta pesquisar um pouco na documenta√ß√£o do pacote kableExtra e entender o que precisa ser alterado.\nPara vari√°veis categ√≥ricas, o processo √© bem similar. Iremos criar um gr√°fico de barras (nunca de pizza!!) e uma tabela com as medidas resumo.\n\ndiabetes_dataset %&gt;%  # Abre o banco de dados\n  select(FamilyHistory) %&gt;% # Seleciona a vari√°vel de interesse\n  ggplot(aes(x = as.factor(FamilyHistory))) + # Chama a fun√ß√£o de criar gr√°ficos colocando nossa var no eixo x como fator (ou seja var categorica)\n  geom_bar(fill = \"#C97064\", color = \"white\") + # Cria o ghr√°fico de barras com as cores desejadas\n  labs(title = \"Distribui√ß√£o para Hist√≥rico Familiar de Daibetes\", # Adiciona t√≠tulo \n       x = \"Possui hist√≥rico familiar? (0 = n√£o, 1 = sim)\", # E substitui o texto padr√£o dos eixos\n       y = \"Frequ√™ncia\")\n\n\n\n\n\n\n\n\nPode ser interessante tamb√©m criar um gr√°fico para as propor√ß√µes do grupo no eixo y, a fim de facilitar a vizualiza√ß√£o. Basta alterar algumas linhas de c√≥digo como se v√™ abaixo.\n\ndiabetes_dataset %&gt;%  # Abre o banco de dados\n  count(FamilyHistory) %&gt;% # Conta as ocorr√™ncias de cada categoria\n  mutate(Propor√ß√£o = n / sum(n)) %&gt;% # Calcula a propor√ß√£o\n  ggplot(aes(x = as.factor(FamilyHistory), y = Propor√ß√£o)) + # Define os eixos\n  geom_col(fill = \"#68A357\", color = \"white\") + # Cria o gr√°fico de barras\n  labs(title = \"Distribui√ß√£o do Hist√≥rico Familiar de Diabetes\", # Adiciona t√≠tulo\n       x = \"Possui hist√≥rico familiar? (0 = n√£o, 1 = sim)\", # E substitui o texto padr√£o dos eixos\n       y = \"Propor√ß√£o\") \n\n\n\n\n\n\n\n\nPor fim, agora vamos fazer as tabelas para as vari√°veis categ√≥ricas.\n\n# Definimos os r√≥tulos em portugu√™s para cada vari√°vel categ√≥rica\nrotulos_categoricas &lt;- c(\n  FamilyHistory = \"Hist√≥rico Familiar\",  # Indica se o indiv√≠duo tem hist√≥rico familiar de diabetes (1 = Sim, 0 = N√£o)\n  DietType = \"Tipo de Dieta\",  # H√°bitos alimentares (0 = Desequilibrado, 1 = Equilibrado, 2 = Vegano/Vegetariano)\n  Hypertension = \"Hipertens√£o\",  # Presen√ßa de press√£o alta (1 = Sim, 0 = N√£o)\n  MedicationUse = \"Uso de Medicamentos\",  # Indica se o indiv√≠duo faz uso de medica√ß√£o (1 = Sim, 0 = N√£o)\n  Outcome = \"Resultado\"  # Diagn√≥stico de diabetes (1 = Diabetes, 0 = Sem Diabetes)\n)\n\n# Selecionamos apenas as vari√°veis categ√≥ricas com base nos r√≥tulos definidos\nvariaveis_categoricas &lt;- names(rotulos_categoricas)\n\n# Calcular a frequ√™ncia e a propor√ß√£o para cada categoria das vari√°veis categ√≥ricas\nresumo_categoricas &lt;- diabetes_dataset %&gt;%  # Acessa o dataset\n  select(all_of(variaveis_categoricas)) %&gt;%  # Seleciona as colunas categ√≥ricas\n  pivot_longer(cols = everything(), names_to = \"Vari√°vel\", values_to = \"Categoria\") %&gt;%  # Converte o formato wide para long\n  group_by(Vari√°vel, Categoria) %&gt;%  # Agrupa pelos valores √∫nicos das vari√°veis categ√≥ricas\n  summarise(Frequ√™ncia = n(), .groups = \"drop\") %&gt;%  # Conta quantas vezes cada categoria aparece\n  mutate(Propor√ß√£o = Frequ√™ncia / sum(Frequ√™ncia) * 100) %&gt;%  # Calcula a porcentagem relativa de cada categoria\n  mutate(Vari√°vel = recode(Vari√°vel, !!!rotulos_categoricas))  # Substitui os nomes das vari√°veis pelos r√≥tulos em portugu√™s\n\n# Ajustamos para remover a repeti√ß√£o do nome da vari√°vel\nresumo_categoricas &lt;- resumo_categoricas %&gt;%\n  group_by(Vari√°vel) %&gt;%\n  mutate(Vari√°vel = ifelse(row_number() == 1, Vari√°vel, \"\")) %&gt;%  # Mant√©m o nome apenas na primeira linha de cada grupo\n  ungroup()\n\n# Criamos a tabela formatada\nresumo_categoricas %&gt;%  # Chama o resumo criado\n  kable(\"html\", \n        caption = \"Distribui√ß√£o das vari√°veis categ√≥ricas\",  # Utiliza o kable da biblioteca kableExtra\n        align = \"c\",  # Alinha o texto ao centro\n        col.names = c(\"Vari√°vel\", \"Categoria\", \"Frequ√™ncia\", \"Propor√ß√£o (%)\")) %&gt;%  # Define os nomes das colunas\n  kable_styling(full_width = FALSE, \n                bootstrap_options = c(\"striped\", \"hover\")) %&gt;%  # Aplica configura√ß√µes de estilo\n  footnote(general = \"Fonte: Elaborado pelo autor.\",  # Adiciona a fonte da tabela\n           general_title = \"\") %&gt;%\n  add_header_above(c(\" \" = 1, \"Estat√≠sticas Descritivas\" = 3))  # Adiciona um cabe√ßalho para as colunas de estat√≠sticas\n\n\nDistribui√ß√£o das vari√°veis categ√≥ricas\n\n\n\n\n\n\n\n\n\n\nEstat√≠sticas Descritivas\n\n\n\nVari√°vel\nCategoria\nFrequ√™ncia\nPropor√ß√£o (%)\n\n\n\n\nTipo de Dieta\n0\n5794\n12.1492975\n\n\n\n1\n2851\n5.9781925\n\n\n\n2\n893\n1.8725100\n\n\nHist√≥rico Familiar\n0\n6653\n13.9505137\n\n\n\n1\n2885\n6.0494863\n\n\nHipertens√£o\n0\n9528\n19.9790312\n\n\n\n1\n10\n0.0209688\n\n\nUso de Medicamentos\n0\n5675\n11.8997693\n\n\n\n1\n3863\n8.1002307\n\n\nResultado\n0\n6256\n13.1180541\n\n\n\n1\n3282\n6.8819459\n\n\n\n Fonte: Elaborado pelo autor.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAn√°lise bivariada\nA an√°lise univariada tem como objetivo entender a distribui√ß√£o da vari√°vel em si. J√° na an√°lise bivariada (e multivariada), queremos entender qual a rela√ß√£o das vari√°veis entre si. Note que n√£o estou buscando a causalidade nem no valor preditivo de cada vari√°vel, isso ser√° uma etapa posterior a depender do seu objetivo de pesquisa.\nPodemos come√ßar com um correlograma, que traz um mapa das correla√ß√µes de todas as vari√°veis cont√≠nuas entre si. √â muito √∫til para identificar se h√° alguma colinearidade entre vari√°veis, que deve ser confirmada depois atrav√©s dos testes apropriados.\n\n# Selecionamos apenas as vari√°veis cont√≠nuas\nvariaveis_continuas &lt;- c(\"Age\", \"BMI\", \"Glucose\", \"BloodPressure\", \"HbA1c\",\n                         \"LDL\", \"HDL\", \"Triglycerides\", \"WaistCircumference\",\n                         \"HipCircumference\", \"WHR\")\n\n# Criamos a matriz de correla√ß√£o\nmatriz_correlacao &lt;- diabetes_dataset %&gt;% \n  select(all_of(variaveis_continuas)) %&gt;%  # Seleciona apenas as vari√°veis cont√≠nuas\n  cor(use = \"pairwise.complete.obs\")  # Calcula a correla√ß√£o excluindo valores NA\n\n# Criamos o correlograma\nggcorrplot(matriz_correlacao, \n           method = \"circle\",  # Define o estilo do gr√°fico (c√≠rculos)\n           type = \"lower\",  # Mostra apenas a metade inferior da matriz\n           lab = TRUE,  # Exibe os valores das correla√ß√µes\n           lab_size = 3,  # Tamanho da fonte dos r√≥tulos\n           colors = c(\"#6D9EC1\", \"white\", \"#E46726\"),  # Define a paleta de cores\n           title = \"Correlograma das Vari√°veis Cont√≠nuas\",  # Adiciona um t√≠tulo\n           ggtheme = theme_minimal())  # Aplica um tema minimalista\n\n\n\n\n\n\n\n\nOutra forma de correla√ß√£o muito importante, principalmente para estudos de predi√ß√£o, √© a correla√ß√£o de cada vari√°vel com o desfecho.\n\n# Definimos vari√°veis cont√≠nuas e categ√≥ricas\nvariaveis_continuas &lt;- c(\"Age\", \"BMI\", \"Glucose\", \"BloodPressure\", \"HbA1c\",\n                         \"LDL\", \"HDL\", \"Triglycerides\", \"WaistCircumference\",\n                         \"HipCircumference\", \"WHR\")\n\nvariaveis_categoricas &lt;- c(\"FamilyHistory\", \"DietType\", \"Hypertension\", \n                           \"MedicationUse\")\n\n# --- Correla√ß√£o para vari√°veis cont√≠nuas com Outcome ---\ncorrelacoes_continuas &lt;- diabetes_dataset %&gt;% \n  select(all_of(variaveis_continuas), Outcome) %&gt;% \n  cor(use = \"pairwise.complete.obs\") %&gt;% \n  as.data.frame() %&gt;%\n  select(Outcome) %&gt;%\n  rownames_to_column(var = \"Vari√°vel\") %&gt;%\n  rename(`Correla√ß√£o` = Outcome) %&gt;%  # Renomeia para manter consist√™ncia\n  mutate(Tipo = \"Cont√≠nua\")\n\n# --- Correla√ß√£o para vari√°veis categ√≥ricas com Outcome ---\ncalcular_cramer &lt;- function(var) {\n  tab &lt;- table(diabetes_dataset[[var]], diabetes_dataset$Outcome)\n  cramer &lt;- rstatix::cramer_v(tab) %&gt;% as.numeric()  # Converte para n√∫mero\n  return(data.frame(Vari√°vel = var, `Correla√ß√£o` = cramer, Tipo = \"Categ√≥rica\"))\n}\n\ncorrelacoes_categoricas &lt;- bind_rows(lapply(variaveis_categoricas, calcular_cramer))\n\nWarning in stats::chisq.test(x, y, correct = correct, ...): Aproxima√ß√£o do\nqui-quadrado pode estar incorreta\n\n# --- Juntamos todas as correla√ß√µes ---\ncorrelacoes_totais &lt;- bind_rows(correlacoes_continuas, correlacoes_categoricas) %&gt;%\n  arrange(desc(abs(Correla√ß√£o)))  # Ordena pela for√ßa da correla√ß√£o\n\n# Defininmos os r√≥tulos em portugu√™s para todas as vari√°veis\nrotulos &lt;- c(\n  Age = \"Idade (anos)\",\n  BMI = \"√çndice de Massa Corporal (kg/m¬≤)\",\n  Glucose = \"Glicose (mg/dL)\",\n  BloodPressure = \"Press√£o Arterial (mmHg)\",\n  HbA1c = \"Hemoglobina Glicada (%)\",\n  LDL = \"Colesterol LDL (mg/dL)\",\n  HDL = \"Colesterol HDL (mg/dL)\",\n  Triglycerides = \"Triglicer√≠deos (mg/dL)\",\n  WaistCircumference = \"Circunfer√™ncia da Cintura (cm)\",\n  HipCircumference = \"Circunfer√™ncia do Quadril (cm)\",\n  WHR = \"Rela√ß√£o Cintura-Quadril\",\n  FamilyHistory = \"Hist√≥rico Familiar\",\n  DietType = \"Tipo de Dieta\",\n  Hypertension = \"Hipertens√£o\",\n  MedicationUse = \"Uso de Medicamentos\"\n)\n\n# Removemos a correla√ß√£o de Outcome consigo mesmo\ncorrelacoes_totais &lt;- correlacoes_totais %&gt;% \n  filter(Vari√°vel != \"Outcome\") %&gt;% \n  mutate(Vari√°vel = recode(Vari√°vel, !!!rotulos))  # Aplicar r√≥tulos\n\n# Exibimos a tabela formatada\ncorrelacoes_totais %&gt;%\n  mutate(Correla√ß√£o = round(Correla√ß√£o, 3)) %&gt;%  # Arredonda valores\n  kable(\"html\", \n        caption = \"Correla√ß√£o de Todas as Vari√°veis com o Desfecho\", \n        align = \"c\", \n        col.names = c(\"Vari√°vel\", \"Correla√ß√£o\", \"Tipo\")) %&gt;%  # Define nomes das colunas\n  kable_styling(full_width = FALSE, \n                bootstrap_options = c(\"striped\", \"hover\")) %&gt;%  # Estiliza√ß√£o\n  footnote(general = \"Fonte: Elaborado pelo autor.\", \n           general_title = \"\") %&gt;%\n  add_header_above(c(\" \" = 1, \"Correla√ß√£o com o Desfecho\" = 2))  # Cabe√ßalho superior\n\n\nCorrela√ß√£o de Todas as Vari√°veis com o Desfecho\n\n\n\n\n\n\n\n\n\nCorrela√ß√£o com o Desfecho\n\n\n\nVari√°vel\nCorrela√ß√£o\nTipo\n\n\n\n\nHist√≥rico Familiar\n0.909\nCateg√≥rica\n\n\nGlicose (mg/dL)\n0.168\nCont√≠nua\n\n\nHemoglobina Glicada (%)\n0.152\nCont√≠nua\n\n\n√çndice de Massa Corporal (kg/m¬≤)\n0.107\nCont√≠nua\n\n\nPress√£o Arterial (mmHg)\n0.096\nCont√≠nua\n\n\nCircunfer√™ncia da Cintura (cm)\n0.087\nCont√≠nua\n\n\nCircunfer√™ncia do Quadril (cm)\n0.083\nCont√≠nua\n\n\nIdade (anos)\n0.068\nCont√≠nua\n\n\nUso de Medicamentos\n0.064\nCateg√≥rica\n\n\nHipertens√£o\n0.028\nCateg√≥rica\n\n\nRela√ß√£o Cintura-Quadril\n0.022\nCont√≠nua\n\n\nColesterol LDL (mg/dL)\n0.019\nCont√≠nua\n\n\nTipo de Dieta\n0.016\nCateg√≥rica\n\n\nColesterol HDL (mg/dL)\n-0.009\nCont√≠nua\n\n\nTriglicer√≠deos (mg/dL)\n-0.008\nCont√≠nua\n\n\n\n Fonte: Elaborado pelo autor.\n\n\n\n\n\n\n\n\n\n\nA partir das correla√ß√µes dadas podemos criar gr√°ficos bivariados com a vari√°vel de interesse e uma covari√°vel.\nPara covari√°vel cont√≠nua, utilizaremos o boxplot como visualiza√ß√£o e para vari√°veis categ√≥ricas gr√°ficos de barras empilhadas.\n\ndiabetes_dataset %&gt;% # Abre o banco de dados\n  ggplot(aes(x = as.factor(FamilyHistory), fill = as.factor(Outcome))) + # Chama a fun√ß√£o de gr√°ficos preenchendo com o desfecho\n  geom_bar(position = \"fill\", color = \"white\") +  # Propor√ß√£o dentro de cada grupo\n  scale_fill_manual(values = c(\"#C97064\", \"#68A357\"), labels = c(\"Sem Diabetes\", \"Diabetes\")) + # Escolhe as cores\n  labs(title = \"Distribui√ß√£o do Hist√≥rico Familiar por Desfecho\", # Adiciona t√≠tulo\n       x = \"Hist√≥rico Familiar (0 = N√£o, 1 = Sim)\",  # Adiciona legendas\n       y = \"Propor√ß√£o\",\n       fill = \"Desfecho\")\n\n\n\n\n\n\n\n\n\ndiabetes_dataset %&gt;% # Abre o banco de dados\n  ggplot(aes(x = as.factor(Outcome), y = Glucose, fill = as.factor(Outcome))) + # Chama a fun√ß√£o de gr√°ficos com preenchimento com o desfecho\n  geom_boxplot(outlier.color = \"red\", outlier.shape = 16) + # Cria o boxplot\n  scale_fill_manual(values = c(\"#C97064\", \"#68A357\"), labels = c(\"Sem Diabetes\", \"Diabetes\")) + # Escolhe as cores\n  labs(title = \"Distribui√ß√£o da Glicose por Desfecho\", # Adiciona t√≠tulo\n       x = \"Desfecho\", # Adiciona legendas\n       y = \"Glicose (mg/dL)\",\n       fill = \"Desfecho\")\n\n\n\n\n\n\n\n\n\n\nConsidera√ß√µes finais\nO passo a passo sugerido aqui √© tanto para cria√ß√£o de relat√≥rios iniciais tanto quanto para o pr√≥prio pesquisador entender melhor a base de dados trabalhada. √â fundamental fazer cada etapa com cuidado e perceber a necessidade de pr√©-processamento das vari√°veis, como ajuste de character para factor, e adaptar os scripts conforme a necessidade.\nEspero ter ajudado!"
  }
]